on: push

name: CI

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      LINT: 1
    steps:
      - uses: technote-space/auto-cancel-redundant-workflow@v1
        with:
          EXCLUDE_MERGED: 'true'
      - name: Set running flag
        run: echo "RUNNING=1" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: +(src|__tests__)/**/*.+(js|ts)
          FILES: .eslintrc
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "RUNNING=" >> $GITHUB_ENV
        if: "! env.GIT_DIFF"

      - name: Get Yarn Cache Directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
        if: env.RUNNING
      - name: Cache node dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        if: env.RUNNING
      - name: Install Package dependencies
        run: yarn install
        if: env.RUNNING
      - name: Check code style
        run: yarn eslint ${{ env.GIT_DIFF_FILTERED }}
        if: env.RUNNING && env.GIT_DIFF_FILTERED
      - name: Check code style
        run: yarn lint
        if: env.RUNNING && !env.GIT_DIFF_FILTERED

  cover:
    name: Coverage
    needs: eslint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        node: ['12', '14']
    steps:
      - name: Set running flag
        run: echo "RUNNING=1" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: +(src|__tests__)/**/*.+(js|ts|snap)
          FILES: |
            yarn.lock
            jest.config.js
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "RUNNING=" >> $GITHUB_ENV
        if: "! env.GIT_DIFF"
      - name: Set running flag
        if: "matrix.node == '12' && ! startsWith(github.ref, 'refs/tags/') && github.event.base_ref == format('refs/heads/{0}', github.event.repository.default_branch)"
        run: echo "RUNNING=1" >> $GITHUB_ENV
      - name: Set running flag
        if: matrix.node == '12' && startsWith(github.ref, 'refs/tags/v')
        run: echo "RUNNING=1" >> $GITHUB_ENV
      - name: Set running flag
        run: |
          if [[ ! -f package.json ]] || ! < package.json jq -r '.scripts | keys[]' | grep -qe '^cover$'; then
            echo "RUNNING=" >> $GITHUB_ENV
          fi

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
        if: env.RUNNING
      - name: Get Yarn Cache Directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
        if: env.RUNNING
      - name: Cache node dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        if: env.RUNNING
      - name: Install Package dependencies
        run: yarn install
        if: env.RUNNING
      - name: Run tests
        run: yarn cover
        if: env.RUNNING
      - name: Codecov
        run: |
          if [ -n "$CODECOV_TOKEN" ]; then
            curl -s https://codecov.io/bash | bash -s -- -t $CODECOV_TOKEN -f $COVERAGE_FILE
          fi
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          COVERAGE_FILE: ./coverage/lcov.info
        if: env.RUNNING && matrix.node == '12'

  deploy:
    name: Deploy
    needs: cover
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
        with:
          path: main
      - uses: actions/checkout@v2
        with:
          repository: technote-space/ga-framework
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Build
        run: |
          cd main
          yarn install
          yarn build
          rm -f build/*LICENSE.txt
      - name: Copy
        run: |
          rm -rdf gh-pages/samples/ga-framework-template
          mv main/build gh-pages/samples/ga-framework-template

      - name: Setup git
        run: |
          cd gh-pages
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Git add changes
        run: |
          cd gh-pages
          git add samples
          diff=$(git status --short -uno | grep -e '^[MAD]' || :)
          if [ -n "${diff}" ]; then echo "commit_flag=1" >> $GITHUB_ENV; fi
      - name: Git commit
        if: env.commit_flag
        run: |
          cd gh-pages
          git commit -qm "chore: update sample demo"
          git show --stat-count=10 HEAD
      - name: Git push
        if: env.commit_flag
        run: |
          cd gh-pages
          git push origin "HEAD":"gh-pages"
